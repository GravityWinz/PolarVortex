version: '3.8'

services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"  # Map to standard HTTP port
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_BASE_URL=ws://localhost:8000
    env_file:
      - .env.production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - polarvortex-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads:rw
      - ./backend/processed_images:/app/processed_images:rw
      - ./backend/logs:/app/logs:rw
    environment:
      - PYTHONPATH=/app
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
    env_file:
      - .env.production
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"  # adjust for Arduino serial device
    networks:
      - polarvortex-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

networks:
  polarvortex-network:
    driver: bridge
